# -*- coding: utf-8 -*-
"""casestudy I .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kvHTLpQC2VP5isOWNgruRUvVsJwZp8_a
"""

import pandas as pd

# Load the dataset
df = pd.read_csv("prisoners.csv")

# Display first five rows
print("First five rows:\n", df.head())

# Display last five rows
print("\nLast five rows:\n", df.tail())

# Describe gives summary stats
print(df.describe())

# Number of columns
print("\nNumber of columns:", df.shape[1])

# Rows with zero inmates across all benefit columns
zero_inmates = df.loc[
    (df['Number of inmates benefitted by Elementary Education'] == 0) &
    (df['Number of inmates benefitted by Adult Education'] == 0) &
    (df['Number of inmates benefitted by Higher Education'] == 0) &
    (df['Number of inmates benefitted by Computer Course'] == 0) &
    (df['Number of inmates benefitted by Vocational Training'] == 0) &
    (df['Number of inmates benefitted by By NGO'] == 0)
]
print("\nRows with zero inmates:\n", zero_inmates)

benefit_cols = [
    'Number of inmates benefitted by Elementary Education',
    'Number of inmates benefitted by Adult Education',
    'Number of inmates benefitted by Higher Education',
    'Number of inmates benefitted by Computer Course',
    'Number of inmates benefitted by Vocational Training',
    'Number of inmates benefitted by By NGO'
]

# Create new column
df['total_benefitted'] = df[benefit_cols].sum(axis=1)
print(df[['State/UT', 'total_benefitted']].head())

# Add a totals row
totals = df[benefit_cols + ['total_benefitted']].sum()
totals['State/UT'] = 'TOTAL'
df_totals = pd.DataFrame([totals])
df_with_total = pd.concat([df, df_totals], ignore_index=True)

print("\nNew DataFrame with 'TOTAL' row:\n", df_with_total.tail(1))

import matplotlib.pyplot as plt

# Exclude the 'TOTAL' row for plotting individual states
df_states = df[df['State/UT'] != 'TOTAL']

plt.figure(figsize=(15, 8))
plt.bar(df_states['State/UT'], df_states['total_benefitted'], color='skyblue')
plt.xticks(rotation=90)
plt.xlabel('State/UT')
plt.ylabel('Total Benefitted Inmates')
plt.title('Total Benefitted Inmates by State')
plt.tight_layout()
plt.show()

# Which state had the maximum beneficiaries?
max_state = df_states.loc[df_states['total_benefitted'].idxmax()]
print(f"\nState with maximum beneficiaries: {max_state['State/UT']} ({int(max_state['total_benefitted'])} inmates)")

# Use the total (sum) of each mode
benefit_totals = df[benefit_cols].sum()

plt.figure(figsize=(8, 8))
plt.pie(benefit_totals, labels=benefit_totals.index, autopct='%1.1f%%', startangle=140)
plt.title('Distribution of Inmate Benefits by Mode')
plt.show()