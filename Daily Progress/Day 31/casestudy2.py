# -*- coding: utf-8 -*-
"""casestudy2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kvHTLpQC2VP5isOWNgruRUvVsJwZp8_a
"""

import pandas as pd

# Load the data
df = pd.read_csv("Salaries.csv")

# Clean columns: convert pay-related columns to numeric
pay_columns = ['BasePay', 'OvertimePay', 'OtherPay', 'Benefits', 'TotalPay', 'TotalPayBenefits']
df[pay_columns] = df[pay_columns].apply(pd.to_numeric, errors='coerce')

# Drop rows with NaN in critical columns
df.dropna(subset=['Year', 'TotalPayBenefits'], inplace=True)
cost_2011 = df[df['Year'] == 2011]['TotalPayBenefits'].sum()
cost_2014 = df[df['Year'] == 2014]['TotalPayBenefits'].sum()
increase = cost_2014 - cost_2011
print(f"Increase in salary cost from 2011 to 2014: ${increase:,.2f}")
job_salary_2014 = df[df['Year'] == 2014].groupby('JobTitle')['TotalPayBenefits'].mean()
highest_mean_salary_job = job_salary_2014.idxmax()
highest_mean_salary = job_salary_2014.max()
print(f"Highest mean salary in 2014: {highest_mean_salary_job} with ${highest_mean_salary:,.2f}")
overtime_2014 = df[df['Year'] == 2014]['OvertimePay'].sum()
print(f"Money saved by stopping OvertimePay in 2014: ${overtime_2014:,.2f}")
top5_jobs = df[df['Year'] == 2014]['JobTitle'].value_counts().head(5).index
top5_costs = df[(df['Year'] == 2014) & (df['JobTitle'].isin(top5_jobs))].groupby('JobTitle')['TotalPayBenefits'].sum()
print("Top 5 Common Jobs and Their Costs in 2014:\n", top5_costs)
last5_jobs = df[df['Year'] == 2014]['JobTitle'].value_counts().tail(5).index
last5_costs = df[(df['Year'] == 2014) & (df['JobTitle'].isin(last5_jobs))].groupby('JobTitle')['TotalPayBenefits'].sum()
print("Last 5 Common Jobs and Their Costs in 2014:\n", last5_costs)
overtime = df[df['Year'] == 2014]['OvertimePay'].sum()
total_pay_benefits = df[df['Year'] == 2014]['TotalPayBenefits'].sum()
percentage = (overtime / total_pay_benefits) * 100
print(f"OvertimePay was {percentage:.2f}% of TotalPayBenefits in 2014")
job_salary_2014 = df[df['Year'] == 2014].groupby('JobTitle')['TotalPayBenefits'].mean()
lowest_mean_salary_job = job_salary_2014.idxmin()
lowest_mean_salary = job_salary_2014.min()
print(f"Lowest mean salary in 2014: {lowest_mean_salary_job} with ${lowest_mean_salary:,.2f}")